CREATE USER opinions IDENTIFIED BY citftwnumber1;

GRANT RESOURCE, CONNECT, CTXAPP TO opinions;

GRANT EXECUTE ON CTXSYS.CTX_CLS TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_DDL TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_DOC TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_OUTPUT TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_QUERY TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_REPORT TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_THES TO opinions;
GRANT EXECUTE ON CTXSYS.CTX_ULEXER TO opinions;

CREATE TABLE "OPINIONS"."OPINION" 
   (	"ID" NUMBER, 
	"PDF" BLOB, 
	"TITLE" VARCHAR2(1000), 
	"DATE_LOADED" TIMESTAMP (6), 
	"MAJORITY_BY" VARCHAR2(250), 
	"DATE_OPINION" TIMESTAMP (6), 
	"OPINION_NUMBER" VARCHAR2(100), 
	"ORIGINAL_PDF_URL" VARCHAR2(500), 
	 PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("PDF") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT));

CREATE INDEX opinionTextIndex ON opinions.opinion(pdf) 
   indextype IS ctxsys.context 
   parameters ('DATASTORE CTXSYS.DEFAULT_DATASTORE
    filter CTXSYS.AUTO_FILTER');

CREATE OR REPLACE VIEW OPINIONS.SCORED_OPINION_LIST (ID,TITLE,DATE_LOADED,MAJORITY_BY,DATE_OPINION,OPINION_NUMBER,ORIGINAL_PDF_URL,SCORE)
	AS
	SELECT ID, TITLE, DATE_LOADED, MAJORITY_BY, DATE_OPINION, OPINION_NUMBER, ORIGINAL_PDF_URL, CAST(0 AS NUMBER) AS SCORE
		FROM OPINIONS.OPINION
	
CREATE OR REPLACE FORCE VIEW "OPINIONS"."MARKEDUP_OPINIONS" ("ID", "HTML") AS 
  SELECT CAST(0 AS NUMBER) AS id, TO_CLOB('') AS html FROM DUAL;
 

 
CREATE OR REPLACE PACKAGE OPINIONS."OPINION_QUERY_PACKAGE" 
AS 
   PROCEDURE "GET_OPINION_BY_ID" (opinionId NUMBER, outcursor OUT SYS_REFCURSOR);
   PROCEDURE "GET_OPINIONS_BY_SIMPLE_SEARCH" (criteria VARCHAR2, quality NUMBER DEFAULT 0, outcursor OUT SYS_REFCURSOR);
   PROCEDURE "GET_OPINION_HTML" (opinion_id IN NUMBER, query IN VARCHAR2, outcursor OUT SYS_REFCURSOR);
END "OPINION_QUERY_PACKAGE";

CREATE OR REPLACE PACKAGE BODY OPINIONS."OPINION_QUERY_PACKAGE" 
AS
   PROCEDURE "GET_OPINION_BY_ID" (opinionId NUMBER, outcursor OUT SYS_REFCURSOR) IS 
   BEGIN
	   OPEN outcursor FOR 
		   SELECT id, title, date_loaded, majority_by, date_opinion, PDF FROM opinion;
   END "GET_OPINION_BY_ID";
   
   PROCEDURE "GET_OPINIONS_BY_SIMPLE_SEARCH" (criteria VARCHAR2, quality NUMBER DEFAULT 0, outcursor OUT SYS_REFCURSOR) IS 
   BEGIN
	   OPEN outcursor FOR
	   		SELECT id, title, date_loaded, majority_by, date_opinion, opinion_number, original_pdf_url, SCORE(1) AS SCORE
	   		FROM OPINION
	   		WHERE contains(PDF, criteria, 1) > quality
	   		ORDER BY SCORE(1) DESC;
	   		
   END "GET_OPINIONS_BY_SIMPLE_SEARCH";
  
   PROCEDURE "GET_OPINION_HTML" (opinion_id IN NUMBER, query IN VARCHAR2, outcursor OUT SYS_REFCURSOR) IS
	    v_clob_selected   CLOB;
	    v_read_amount     INTEGER;
	    v_read_offset     INTEGER;
	    v_buffer          VARCHAR2(32767);
   BEGIN
	      ctx_doc.markup (index_name => 'opinionTextIndex',
	         textkey    => CAST(opinion_id AS VARCHAR2),
	         text_query => query,
	         restab     => v_clob_selected,
	         starttag   => '<span style="background-color: yellow">',
	         endtag     => '</span>');
	        
	      OPEN outcursor FOR
	      	 SELECT opinion_id AS id, v_clob_selected AS html FROM DUAL;
   END "GET_OPINION_HTML";

END "OPINION_QUERY_PACKAGE";


CREATE OR REPLACE PACKAGE OPINIONS.OPINION_MANAGEMENT_PACKAGE
AS
   PROCEDURE "SYNC_TEXT_INDEX";
END OPINION_MANAGEMENT_PACKAGE;

CREATE OR REPLACE PACKAGE BODY OPINIONS.OPINION_MANAGEMENT_PACKAGE
AS
   PROCEDURE "SYNC_TEXT_INDEX" IS
   BEGIN
	   CTX_DDL.SYNC_INDEX('opiniontextindex');
   END "SYNC_TEXT_INDEX";
END OPINION_MANAGEMENT_PACKAGE; 